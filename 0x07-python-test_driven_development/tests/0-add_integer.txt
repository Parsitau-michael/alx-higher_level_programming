=================================
From module ''0-add_integer''
=================================
The library has function ''add_integer''

Numbers
=======

''add_integer'' returns the sum of its arguments
i.e equivalent to using ''+'' operator.

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 3)
	5

Case with negative integers
::
	>>> add_integer(-5, -5)
	-10

Case with One int and One float

::
	>>> add_integer(4, 2.0)
	6

Case with float overflow

::
	>>> add_integer(2e10000, 3.0)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

Case for values that are not ints or floats

::
	>>> add_integer("Hello", 8)
	Traceback (most recent call last):
	TypeError: a must be an integer

::
	>>> add_integer(9, "World")
	Traceback (most recent call last):
	TypeError: b must be an integer

Case with missing one argument

::
	>>> add_integer(5)
	103

Case with no arguments

::
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

Case with regular +

::
	>>> add_integer(1 + 4)
	103
